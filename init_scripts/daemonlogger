#!/bin/sh
### BEGIN INIT INFO
# Provides:
# Required-Start:    
# Required-Stop:     
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start daemonlogger at runtime
# Description:       Manages daemonlogger. 
### END INIT INFO

DAEMONLOGGER_BIN=/usr/bin/daemonlogger
INITAL_DAEMONLOGGER_RENAME_SCRIPT=/opt/ids_scripts/utils/daemonlogger_ls_rename.sh
DAEMONLOGGER_RENAME_DAEMON_SCRIPT=/opt/ids_scripts/utils/daemonlogger_inotify_rename.sh
PCAP_LOCATION=/packet_recorder/.pcap
RENAMED_PCAP_LOCATION=/packet_recorder

name=`basename $0`
stdout_log="/var/log/$name.log"
stderr_log="/var/log/$name.err"

is_running() {
	PIDS=$(pgrep -f $DAEMONLOGGER_BIN)
	PID_COUNT=${#PIDS[@]}
	[ $PID_COUNT -gt 0 ]
}

case "$1" in
    start)
    if is_running; then
        echo "Already started"
    else
		# Renaming existing daemonlogger generated pcaps that may have been missed before
		$INITAL_DAEMONLOGGER_RENAME_SCRIPT /packet_recorder/.pcap /packet_recorder
		# Starting script to rename new files that are created and backgrounds it
		$DAEMONLOGGER_RENAME_DAEMON_SCRIPT /packet_recorder/.pcap /packet_recorder &
        echo "Starting $name"
        #Add all daemonloggers here!!!!
		$DAEMONLOGGER_BIN -d -g daemon -u daemon -i eth0 -l $PCAP_LOCATION -M 50% -n Perimeter -r -s 100000000 -S0 >> "$stdout_log" 2>> "$stderr_log" &
        if ! is_running; then
            echo "Unable to start, see $stdout_log and $stderr_log"
            exit 1
        fi
    fi
    ;;
    stop)
    if is_running; then
        echo -n "Stopping $name.."
		pkill -f $DAEMONLOGGER_BIN
		pkill -f $INITAL_DAEMONLOGGER_RENAME_SCRIPT
		pkill -f $DAEMONLOGGER_RENAME_DAEMON_SCRIPT
        for i in {1..10}
        do
            if ! is_running; then
                break
            fi

            echo -n "."
            sleep 1
        done
        echo

        if is_running; then
            echo "Not stopped; may still be shutting down or shutdown may have failed"
            exit 1
        else
            echo "Stopped"
        fi
    else
        echo "Not running"
    fi
    ;;
    restart)
    $0 stop
    if is_running; then
        echo "Unable to stop, will not attempt to start"
        exit 1
    fi
    $0 start
    ;;
    status)
    if is_running; then
        echo "Running"
    else
        echo "Stopped"
        exit 1
    fi
    ;;
    purge_pcaps)
	echo "Purging all pcaps in ${PCAP_LOCATION}"
	rm $PCAP_LOCATION/*
	$INITAL_DAEMONLOGGER_RENAME_SCRIPT $PCAP_LOCATION $RENAMED_PCAP_LOCATION
	;;
    *)
    echo "Usage: $0 {start|stop|restart|status|purge_pcaps}"
    exit 1
    ;;
esac

exit 0