#!/bin/sh
### BEGIN INIT INFO
# Provides:
# Required-Start:    
# Required-Stop:     
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start suricata at boot time
# Description:       Enable service provided by daemon.
### END INIT INFO

SURICATA_BIN="/usr/bin/suricata"
SURICATA_CONFIG="/etc/suricata/suricata.yaml"
SURI_LOG_LOCATION="/var/log/suricata"
SURI_RULE_DIR="/etc/suricata/rules"
OINKMASTER_BIN="/usr/sbin/oinkmaster"

name=`basename $0`
stdout_log="/var/log/$name.log"
stderr_log="/var/log/$name.err"

is_running() {
    PIDS=$(pgrep -f $SURICATA_BIN)
    PID_COUNT=${#PIDS[@]}
    [ $PID_COUNT -gt 0 ]
}

case "$1" in
    start)
    if is_running; then
        echo "Already started"
    else
        export LD_PRELOAD="/usr/lib/libtcmalloc_minimal.so.4"        
        echo "Starting $name"
        #Suricata bin - run as daemon - config_location - interface  
        $SURICATA_BIN -D -c $SURICATA_CONFIG -i eth0 >> "$stdout_log" 2>> "$stderr_log" &
        sleep 2
        if ! is_running; then
            echo "Unable to start, see $stdout_log and $stderr_log"
            exit 1
        fi
        echo "Suricata's are running!!! (you might want to go catch them hehe)"
    fi
    ;;
    stop)
    if is_running; then
        echo -n "Stopping $name.."
        pkill -f $SURICATA_BIN
        for i in {1..10}
        do
            if ! is_running; then
                break
            fi

            echo -n "."
            sleep 1
        done
        echo

        if is_running; then
            echo "Not stopped; may still be shutting down or shutdown may have failed"
            exit 1
        else
            echo "Stopped"
        fi
    else
        echo "Not running"
    fi
    ;;
    restart)
    $0 stop
    if is_running; then
        echo "Unable to stop, will not attempt to start"
        exit 1
    fi
    $0 start
    ;;
    status)
    if is_running; then
        echo "Running"
    else
        echo "Stopped"
        exit 1
    fi
    ;;
    pull_rules)
    if is_running; then
        echo "Suricata is running, pulling rules and then restarting"
        $OINKMASTER_BIN -o $SURI_RULE_DIR
        $0 restart
    else
        echo "Suricata is stopped, pulling new rules"
        $OINKMASTER_BIN -o $SURI_RULE_DIR
    fi
    ;;
    purge_logs)
    echo "Purging logs from ${SURI_LOG_LOCATION}"
    if is_running; then
        echo "Suricata is running, going to purge logs and then restart Suri"
        rm -rf $SURI_LOG_LOCATION/*
        $0 restart
    else
        echo "Suricata is stopped, only purging logs"
        rm -rf $SURI_LOG_LOCATION/*
    fi
    ;;
    *)
    echo "Usage: $0 {start|stop|restart|status|pull_rules|purge_logs}"
    exit 1
    ;;
esac

exit 0